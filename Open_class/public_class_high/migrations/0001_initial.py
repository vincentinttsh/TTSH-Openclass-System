# Generated by Django 2.2.2 on 2019-07-07 03:38

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Design_table',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_name', models.CharField(max_length=20)),
                ('teach_teacher', models.CharField(max_length=6)),
                ('source_of_teaching_material', models.CharField(max_length=20)),
                ('teach_class', models.CharField(max_length=20)),
                ('teach_date', models.DateField()),
                ('teach_start_time', models.TimeField()),
                ('teach_end_time', models.TimeField()),
                ('background_analysis', models.TextField()),
                ('teaching_method', models.TextField()),
                ('teaching_resources', models.TextField()),
                ('reference_material', models.TextField()),
                ('teaching_objectives', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='High_Class',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teach_teacher', models.CharField(max_length=6)),
                ('teach_teacher_email', models.EmailField(default='example@ttsh.tp.edu.tw', max_length=254)),
                ('subject', models.CharField(max_length=20)),
                ('class_room', models.CharField(max_length=10)),
                ('teach_date', models.DateField()),
                ('teach_start_time', models.TimeField()),
                ('teach_end_time', models.TimeField()),
                ('attend_password', models.CharField(max_length=10)),
                ('attend_number', models.IntegerField(default=0)),
                ('attend_people', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Preparation_record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=20)),
                ('author', models.CharField(max_length=6)),
                ('teach_date', models.DateField()),
                ('teach_start_time', models.TimeField()),
                ('teach_end_time', models.TimeField()),
                ('teaching_grade', models.CharField(max_length=20)),
                ('class_name', models.CharField(max_length=20)),
                ('teach_teacher', models.CharField(max_length=6)),
                ('source_of_teaching_material', models.CharField(max_length=20)),
                ('content', models.TextField()),
                ('teaching_objectives', models.TextField()),
                ('student_experience', models.TextField()),
                ('teaching_activity', models.TextField()),
                ('evaluation_method', models.TextField()),
                ('the_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='public_class_high.High_Class')),
            ],
        ),
        migrations.CreateModel(
            name='Observation_record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(max_length=6)),
                ('observation_date', models.DateField()),
                ('teach_teacher', models.CharField(max_length=6)),
                ('subject', models.CharField(max_length=20)),
                ('class_name', models.CharField(max_length=20)),
                ('learning_atmosphere', models.TextField()),
                ('learning_process', models.TextField()),
                ('learning_result', models.TextField()),
                ('experience_and_learning', models.TextField()),
                ('the_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='public_class_high.High_Class')),
            ],
        ),
        migrations.CreateModel(
            name='Design_table_datail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teaching_objectives', models.TextField()),
                ('teacher_activity', models.TextField()),
                ('student_activities', models.TextField()),
                ('teaching_aid', models.TextField()),
                ('assessment_method', models.TextField()),
                ('teaching_method', models.TextField()),
                ('time_allocation', models.TextField()),
                ('the_design', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='public_class_high.Design_table')),
            ],
        ),
        migrations.AddField(
            model_name='design_table',
            name='the_class',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='public_class_high.High_Class'),
        ),
        migrations.CreateModel(
            name='Briefing_record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teach_teacher', models.CharField(max_length=6)),
                ('observer', models.TextField()),
                ('briefing_date', models.DateField()),
                ('briefing_time', models.TimeField()),
                ('affirmation_teaching_performance', models.TextField()),
                ('guide_discussion_teaching_performance', models.TextField()),
                ('judgment_performance', models.TextField()),
                ('suggest', models.TextField()),
                ('growth_activity', models.TextField()),
                ('the_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='public_class_high.High_Class')),
            ],
        ),
    ]
